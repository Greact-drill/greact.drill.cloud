// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // Добавляем схему frontend для таблиц кастомизации
  schemas  = ["public", "frontend"]
}

// ------------------------------------
// Public Schema (default)
// ------------------------------------

// История снятых показаний, собранных метрик
model History {
  id        Int      @id @default(autoincrement())
  edge      String   @db.VarChar(100)
  timestamp DateTime
  tag       String   @db.VarChar(100)
  value     Float
  createdAt DateTime @default(now())

  @@schema("public")
  @@index([edge])
  @@index([timestamp])
  @@index([tag])
  @@index([edge, tag])
  @@index([edge, timestamp])
  @@map("history")
}

// Текущие значения показаний, метрик
model Current {
  id        Int      @id @default(autoincrement())
  edge      String   @db.VarChar(100)
  tag       String   @db.VarChar(100)
  value     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("public")
  @@unique([edge, tag])
  @@index([edge])
  @@index([tag])
  @@map("current")
}

model edge {
  id      String @id @db.VarChar(100)
  name    String
  blocks  block[] // Связь с таблицей block

  @@schema("public")
  @@index([name])
  @@map("edge")
}

model block {
  edge_id   String @db.VarChar(100)
  id        String @id @db.VarChar(100)
  name      String
  edge      edge @relation(fields: [edge_id], references: [id])

  @@schema("public")
  @@index([edge_id,name])
  @@index([edge_id])
  @@index([name])
  @@map("block")
}

model tag {
  id                  String @id @db.VarChar(100)
  name                String
  min                 Int
  max                 Int
  comment             String
  unit_of_measurement String

  @@schema("public")
  @@index([name])
  @@map("tag")
}

// ------------------------------------
// Frontend Schema
// ------------------------------------

model edge_customization {
  id         Int @id @default(autoincrement())
  edge_id    String @db.VarChar(100)
  key        String
  value      String

  @@schema("frontend")
  @@unique([edge_id, key])
  @@index([edge_id])
  @@map("edge_customization")
}

model block_customization {
  id         Int @id @default(autoincrement())
  block_id   String @db.VarChar(100)
  key        String
  value      String
  
  @@schema("frontend")
  @@unique([block_id, key])
  @@index([block_id])
  @@map("block_customization")
}

model tag_customization {
  id         Int @id @default(autoincrement())
  edge_id    String @db.VarChar(100)
  tag_id     String @db.VarChar(100)
  key        String
  value      String

  @@schema("frontend")
  @@unique([edge_id, tag_id, key])
  @@map("tag_customization")
}